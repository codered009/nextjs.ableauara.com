// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: souD5h88MhENvTHMTJd8eE
// Component: CWSpEpVIamsi
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import IntegrationsTab from "../../IntegrationsTab"; // plasmic-import: doRwzqJ5VpAr/component

import { ThemeValue, useTheme } from "./PlasmicGlobalVariant__Theme"; // plasmic-import: K8kdSftIudYz/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_nextjs_ableaura_com.module.css"; // plasmic-import: souD5h88MhENvTHMTJd8eE/projectcss
import * as sty from "./PlasmicIntegrations.module.css"; // plasmic-import: CWSpEpVIamsi/css

export type PlasmicIntegrations__VariantMembers = {
  gatsby: "gatsby";
  nextjs: "nextjs";
};

export type PlasmicIntegrations__VariantsArgs = {
  gatsby?: SingleBooleanChoiceArg<"gatsby">;
  nextjs?: SingleBooleanChoiceArg<"nextjs">;
};

type VariantPropType = keyof PlasmicIntegrations__VariantsArgs;
export const PlasmicIntegrations__VariantProps = new Array<VariantPropType>(
  "gatsby",
  "nextjs"
);

export type PlasmicIntegrations__ArgsType = {};
type ArgPropType = keyof PlasmicIntegrations__ArgsType;
export const PlasmicIntegrations__ArgProps = new Array<ArgPropType>();

export type PlasmicIntegrations__OverridesType = {
  root?: p.Flex<"div">;
  text?: p.Flex<"div">;
};

export interface DefaultIntegrationsProps {
  gatsby?: SingleBooleanChoiceArg<"gatsby">;
  nextjs?: SingleBooleanChoiceArg<"nextjs">;
  className?: string;
}

function PlasmicIntegrations__RenderFunc(props: {
  variants: PlasmicIntegrations__VariantsArgs;
  args: PlasmicIntegrations__ArgsType;
  overrides: PlasmicIntegrations__OverridesType;
  dataFetches?: PlasmicIntegrations__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    theme: useTheme()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      {false ? (
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__dMlPp)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__wj6G5)}
          >
            <IntegrationsTab
              active={"active" as const}
              className={classNames(
                "__wab_instance",
                sty.integrationsTab___3ATpm
              )}
            />

            <IntegrationsTab
              className={classNames(
                "__wab_instance",
                sty.integrationsTab__cRwWn
              )}
            >
              {"Hosting"}
            </IntegrationsTab>

            <IntegrationsTab
              className={classNames(
                "__wab_instance",
                sty.integrationsTab__yi0Ri
              )}
            >
              {"CMS"}
            </IntegrationsTab>

            <IntegrationsTab
              className={classNames(
                "__wab_instance",
                sty.integrationsTab___1Ivv
              )}
            >
              {"Ecommerce"}
            </IntegrationsTab>
          </p.Stack>

          <div className={classNames(defaultcss.all, sty.freeBox__jmiEa)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__vXgpK)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___1V6Pp)}
                displayHeight={"40px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: "/plasmic/nextjs_ableaura_com/images/image.svg",
                  fullWidth: 300,
                  fullHeight: 126,
                  aspectRatio: 2.374227
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__lAaBt)}
                displayHeight={"40px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: "/plasmic/nextjs_ableaura_com/images/image3.svg",
                  fullWidth: 300,
                  fullHeight: 76,
                  aspectRatio: 3.968504
                }}
              />

              {(hasVariant(variants, "gatsby", "gatsby") ? false : true) ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ndKgp, {
                    [sty.img__gatsby__ndKgpDnZfb]: hasVariant(
                      variants,
                      "gatsby",
                      "gatsby"
                    )
                  })}
                  displayHeight={"40px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image8.svg",
                    fullWidth: 250,
                    fullHeight: 150,
                    aspectRatio: 1.669355
                  }}
                />
              ) : null}
              {(hasVariant(variants, "nextjs", "nextjs") ? false : true) ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___4XzF, {
                    [sty.img__nextjs___4XzFvse89]: hasVariant(
                      variants,
                      "nextjs",
                      "nextjs"
                    )
                  })}
                  displayHeight={"36px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image4.svg",
                    fullWidth: 300,
                    fullHeight: 79,
                    aspectRatio: 3.785714
                  }}
                />
              ) : null}
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__l7Nxr)}
                  displayHeight={"50px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image53.png",
                    fullWidth: 670,
                    fullHeight: 195,
                    aspectRatio: undefined
                  }}
                />
              ) : null}
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__hb9Vk)}
            >
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__cDekF)}
                  displayHeight={"50px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image53.png",
                    fullWidth: 670,
                    fullHeight: 195,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <div className={classNames(defaultcss.all, sty.freeBox__okqKk)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___8Mj2)}
                  displayHeight={"32px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image9.svg",
                    fullWidth: 300,
                    fullHeight: 82,
                    aspectRatio: 3.675
                  }}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__tcmeV)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lfww7)}
                  displayHeight={"28px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image11.svg",
                    fullWidth: 300,
                    fullHeight: 68,
                    aspectRatio: 4.441718
                  }}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox___6APlW)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___5L7Y)}
                  displayHeight={"26px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image12.png",
                    fullWidth: 2600,
                    fullHeight: 623,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___8YFav)}
            >
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__dPwiu)}
                  displayHeight={"50px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image53.png",
                    fullWidth: 670,
                    fullHeight: 195,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <div className={classNames(defaultcss.all, sty.freeBox__g9OcS)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__zHkzy)}
                  displayHeight={"40px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"126px" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image75.svg",
                    fullWidth: 300,
                    fullHeight: 86,
                    aspectRatio: 3.496503
                  }}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__vTwYf)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__iHl2)}
                  displayHeight={"40px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"171px" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image74.png",
                    fullWidth: 377,
                    fullHeight: 195,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__bLlnx)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__o7Cg)}
                  displayHeight={"40px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image76.png",
                    fullWidth: 375,
                    fullHeight: 224,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox___2EUJa)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qefQn)}
                  displayHeight={"32px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image77.png",
                    fullWidth: 768,
                    fullHeight: 212,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__jLj26)}
            >
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qjNpO)}
                  displayHeight={"50px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image53.png",
                    fullWidth: 670,
                    fullHeight: 195,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <div className={classNames(defaultcss.all, sty.freeBox__qpnL)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hw6Uh)}
                  displayHeight={"32px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image89.svg",
                    fullWidth: 300,
                    fullHeight: 62,
                    aspectRatio: 4.846774
                  }}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__tY7P)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__s6ZSw)}
                  displayHeight={"24px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image90.png",
                    fullWidth: 1500,
                    fullHeight: 303,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__iVckU)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__u7JQz)}
                  displayHeight={"40px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"203px" as const}
                  src={{
                    src: "/plasmic/nextjs_ableaura_com/images/image91.svg",
                    fullWidth: 300,
                    fullHeight: 68,
                    aspectRatio: 4.407336
                  }}
                />
              </div>
            </p.Stack>
          </div>
        </p.Stack>
      ) : null}
      {true ? (
        <div
          data-plasmic-name={"text"}
          data-plasmic-override={overrides.text}
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.text,
            {
              [sty.text__global_theme_altHeadlineFont]: hasVariant(
                globalVariants,
                "theme",
                "altHeadlineFont"
              )
            }
          )}
        >
          {hasVariant(globalVariants, "theme", "altHeadlineFont")
            ? "Integrate and deploy anywhere."
            : "Works with any platform"}
        </div>
      ) : null}

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox__ePjN)}
      >
        <p.PlasmicImg
          alt={""}
          className={classNames(sty.img__ltQbb)}
          displayHeight={"32px" as const}
          displayMaxHeight={"none" as const}
          displayMaxWidth={"none" as const}
          displayMinHeight={"0" as const}
          displayMinWidth={"0" as const}
          displayWidth={"auto" as const}
          loading={"lazy" as const}
          src={{
            src: "/plasmic/nextjs_ableaura_com/images/image.svg",
            fullWidth: 300,
            fullHeight: 126,
            aspectRatio: 2.374227
          }}
        />

        {(hasVariant(variants, "gatsby", "gatsby") ? false : true) ? (
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__toftH, {
              [sty.img__gatsby__toftHdnZfb]: hasVariant(
                variants,
                "gatsby",
                "gatsby"
              )
            })}
            displayHeight={"32px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image8.svg",
              fullWidth: 250,
              fullHeight: 150,
              aspectRatio: 1.669355
            }}
          />
        ) : null}
        {(hasVariant(variants, "nextjs", "nextjs") ? false : true) ? (
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__qUpCh, {
              [sty.img__nextjs__qUpChVse89]: hasVariant(
                variants,
                "nextjs",
                "nextjs"
              )
            })}
            displayHeight={"24px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image4.svg",
              fullWidth: 300,
              fullHeight: 79,
              aspectRatio: 3.785714
            }}
          />
        ) : null}

        <p.PlasmicImg
          alt={""}
          className={classNames(sty.img__cvC9G)}
          displayHeight={"32px" as const}
          displayMaxHeight={"none" as const}
          displayMaxWidth={"none" as const}
          displayMinHeight={"0" as const}
          displayMinWidth={"0" as const}
          displayWidth={"auto" as const}
          loading={"lazy" as const}
          src={{
            src: "/plasmic/nextjs_ableaura_com/images/image18.png",
            fullWidth: 1229,
            fullHeight: 400,
            aspectRatio: undefined
          }}
        />

        <p.PlasmicImg
          alt={""}
          className={classNames(sty.img__savzB)}
          displayHeight={"32px" as const}
          displayMaxHeight={"none" as const}
          displayMaxWidth={"none" as const}
          displayMinHeight={"0" as const}
          displayMinWidth={"0" as const}
          displayWidth={"auto" as const}
          loading={"lazy" as const}
          src={{
            src: "/plasmic/nextjs_ableaura_com/images/image19.png",
            fullWidth: 800,
            fullHeight: 375,
            aspectRatio: undefined
          }}
        />

        <p.PlasmicImg
          alt={""}
          className={classNames(sty.img__caYQe)}
          displayHeight={"24px" as const}
          displayMaxHeight={"none" as const}
          displayMaxWidth={"none" as const}
          displayMinHeight={"0" as const}
          displayMinWidth={"0" as const}
          displayWidth={"auto" as const}
          loading={"lazy" as const}
          src={{
            src: "/plasmic/nextjs_ableaura_com/images/image20.png",
            fullWidth: 700,
            fullHeight: 187,
            aspectRatio: undefined
          }}
        />

        <p.PlasmicImg
          alt={""}
          className={classNames(sty.img__qQeD)}
          displayHeight={"24px" as const}
          displayMaxHeight={"none" as const}
          displayMaxWidth={"none" as const}
          displayMinHeight={"0" as const}
          displayMinWidth={"0" as const}
          displayWidth={"auto" as const}
          loading={"lazy" as const}
          src={{
            src: "/plasmic/nextjs_ableaura_com/images/image17.png",
            fullWidth: 427,
            fullHeight: 118,
            aspectRatio: undefined
          }}
        />

        <div className={classNames(defaultcss.all, sty.freeBox___9HvYz)}>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__xmFmu)}
            displayHeight={"24px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image75.svg",
              fullWidth: 300,
              fullHeight: 86,
              aspectRatio: 3.496503
            }}
          />
        </div>

        <div className={classNames(defaultcss.all, sty.freeBox__zrZc)}>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img___535Oy)}
            displayHeight={"24px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image95.svg",
              fullWidth: 300,
              fullHeight: 68,
              aspectRatio: 4.412844
            }}
          />
        </div>

        <div className={classNames(defaultcss.all, sty.freeBox__zbmF)}>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__yrnSo)}
            displayHeight={"24px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image91.svg",
              fullWidth: 300,
              fullHeight: 68,
              aspectRatio: 4.407336
            }}
          />
        </div>

        <div className={classNames(defaultcss.all, sty.freeBox__am8WP)}>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__uk2Ll)}
            displayHeight={"24px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image89.svg",
              fullWidth: 300,
              fullHeight: 62,
              aspectRatio: 4.846774
            }}
          />
        </div>

        <div className={classNames(defaultcss.all, sty.freeBox__t9OFs)}>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__aNAlx)}
            displayHeight={"20px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image9.svg",
              fullWidth: 300,
              fullHeight: 82,
              aspectRatio: 3.675
            }}
          />
        </div>

        <div className={classNames(defaultcss.all, sty.freeBox___6IkTk)}>
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__zVOsK)}
            displayHeight={"20px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image11.svg",
              fullWidth: 300,
              fullHeight: 68,
              aspectRatio: 4.441718
            }}
          />
        </div>

        {false ? (
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img___4Fo26)}
            displayHeight={"50px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image53.png",
              fullWidth: 670,
              fullHeight: 195,
              aspectRatio: undefined
            }}
          />
        ) : null}
      </p.Stack>
    </p.Stack>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "text"],
  text: ["text"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicIntegrations__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicIntegrations__VariantsArgs;
    args?: PlasmicIntegrations__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicIntegrations__Fetches;
  } & Omit<PlasmicIntegrations__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicIntegrations__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicIntegrations__ArgProps,
      internalVariantPropNames: PlasmicIntegrations__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicIntegrations__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicIntegrations";
  } else {
    func.displayName = `PlasmicIntegrations.${nodeName}`;
  }
  return func;
}

export const PlasmicIntegrations = Object.assign(
  // Top-level PlasmicIntegrations renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicIntegrations
    internalVariantProps: PlasmicIntegrations__VariantProps,
    internalArgProps: PlasmicIntegrations__ArgProps
  }
);

export default PlasmicIntegrations;
/* prettier-ignore-end */

// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: souD5h88MhENvTHMTJd8eE
// Component: 3xI2X6P9ke7s
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: gm5-8uP8UsM/component
import PageHero from "../../PageHero"; // plasmic-import: vbMgnF8jjWCL/component
import GraphicIcon from "../../GraphicIcon"; // plasmic-import: e2aIHUlliT40/component
import ValuePropCardsSection from "../../ValuePropCardsSection"; // plasmic-import: zIkbxBPUs6pI/component
import SmallValuePropCard from "../../SmallValuePropCard"; // plasmic-import: i-nPMUQB3KRp/component
import ButtonLink from "../../ButtonLink"; // plasmic-import: WEYjixTZW6s/component
import Linky from "../../Linky"; // plasmic-import: R0_cM2qssTE/component
import ValuePropsListSection from "../../ValuePropsListSection"; // plasmic-import: AX5l3wivMblA/component
import ValuePropListItem from "../../ValuePropListItem"; // plasmic-import: eFR6LkfCZMcF/component
import Divider from "../../Divider"; // plasmic-import: 5YxrxfKmRHtf/component
import ValuePropSection from "../../ValuePropSection"; // plasmic-import: 3bwHcXHAsuR/component
import Footer from "../../Footer"; // plasmic-import: MOxc4yW_hfJ/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_nextjs_ableaura_com.module.css"; // plasmic-import: souD5h88MhENvTHMTJd8eE/projectcss
import * as sty from "./PlasmicPageDesignSystems.module.css"; // plasmic-import: 3xI2X6P9ke7s/css

import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: hBHHolMTg55Z/icon
import Icon17Icon from "./icons/PlasmicIcon__Icon17"; // plasmic-import: 00s88MZtS-CY/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 0UGn88PbJe7i/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: qXkXmSCGXsaH/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: EQ7GLeVrTTZz/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: k9Dpafpb_b34/icon
import Icon19Icon from "./icons/PlasmicIcon__Icon19"; // plasmic-import: xmAOH14kCVjJ/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: B1mIC3b4uxVA/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: 8m1F-mZpTDnT/icon

export type PlasmicPageDesignSystems__VariantMembers = {};

export type PlasmicPageDesignSystems__VariantsArgs = {};
type VariantPropType = keyof PlasmicPageDesignSystems__VariantsArgs;
export const PlasmicPageDesignSystems__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPageDesignSystems__ArgsType = {};
type ArgPropType = keyof PlasmicPageDesignSystems__ArgsType;
export const PlasmicPageDesignSystems__ArgProps = new Array<ArgPropType>();

export type PlasmicPageDesignSystems__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  pageHero?: p.Flex<typeof PageHero>;
  valuePropsListSection?: p.Flex<typeof ValuePropsListSection>;
  valuePropListItem?: p.Flex<typeof ValuePropListItem>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultPageDesignSystemsProps {
  className?: string;
}

function PlasmicPageDesignSystems__RenderFunc(props: {
  variants: PlasmicPageDesignSystems__VariantsArgs;
  args: PlasmicPageDesignSystems__ArgsType;
  overrides: PlasmicPageDesignSystems__OverridesType;
  dataFetches?: PlasmicPageDesignSystems__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <Header
        data-plasmic-name={"header"}
        data-plasmic-override={overrides.header}
        className={classNames("__wab_instance", sty.header)}
      />

      <PageHero
        data-plasmic-name={"pageHero"}
        data-plasmic-override={overrides.pageHero}
        className={classNames("__wab_instance", sty.pageHero)}
        slot={
          "Single source of truth for your design system, from conception to production."
        }
        slot2={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__pyzIj)}
            colors={"cyan" as const}
          >
            <Icon14Icon
              className={classNames(defaultcss.all, sty.svg__uyjhx)}
              role={"img"}
            />
          </GraphicIcon>
        }
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.text__fVmK
          )}
        >
          {"design systems"}
        </div>
      </PageHero>

      <ValuePropCardsSection
        className={classNames(
          "__wab_instance",
          sty.valuePropCardsSection__jz3H3
        )}
        slot={"No-compromise developer flexibility."}
      >
        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__dpaxV
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__fIYsP)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__qHfnF
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__i0ZSo)}
              colors={"coral" as const}
            >
              <Icon17Icon
                className={classNames(defaultcss.all, sty.svg__ebnYc)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames("__wab_instance", sty.smallValuePropCard__hJfZ)}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__m88Gu)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__zHrvy
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__rq5P)}
              colors={"green" as const}
            >
              <Icon6Icon
                className={classNames(defaultcss.all, sty.svg__s1Wq)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__gPdVh
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__vPIyJ)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text___21U9D
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__t2FCt)}
              colors={"yellow" as const}
            >
              <Icon15Icon
                className={classNames(defaultcss.all, sty.svg__kc5Qx)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />
      </ValuePropCardsSection>

      <ValuePropsListSection
        data-plasmic-name={"valuePropsListSection"}
        data-plasmic-override={overrides.valuePropsListSection}
        className={classNames("__wab_instance", sty.valuePropsListSection)}
      >
        <ValuePropListItem
          data-plasmic-name={"valuePropListItem"}
          data-plasmic-override={overrides.valuePropListItem}
          slot={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__ivNvg)}
              colors={"teal" as const}
            >
              <Icon17Icon
                className={classNames(defaultcss.all, sty.svg__nAhHu)}
                role={"img"}
              />
            </GraphicIcon>
          }
        >
          {
            "Whether youâ€™re a developer, designer, or content creative, Plasmic Studio scales to your desired level of control."
          }
        </ValuePropListItem>

        <Divider className={classNames("__wab_instance", sty.divider___4T6)} />

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__ulhjF)}
        >
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__tvglU)}
            colors={"teal" as const}
          >
            <Icon17Icon
              className={classNames(defaultcss.all, sty.svg__chtYq)}
              role={"img"}
            />
          </GraphicIcon>

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text__zO4V7
            )}
          >
            {
              "Free up developers and iterate faster. Or accelerate your own development cycles."
            }
          </div>
        </p.Stack>

        <Divider className={classNames("__wab_instance", sty.divider__n4Llv)} />

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__kM7EE)}
        >
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__zr2Ex)}
            colors={"teal" as const}
          >
            <Icon17Icon
              className={classNames(defaultcss.all, sty.svg___888D)}
              role={"img"}
            />
          </GraphicIcon>

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text__zGFet
            )}
          >
            {
              "Keep everyone on the same page, with a single source of truth for design and production."
            }
          </div>
        </p.Stack>
      </ValuePropsListSection>

      <ValuePropCardsSection
        className={classNames(
          "__wab_instance",
          sty.valuePropCardsSection__dXqT
        )}
        slot={"Limitless expressivity."}
      >
        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__dz0Yt
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__tg02Z)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__zCt5Y
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__gfbcy)}
              colors={"teal" as const}
            >
              <Icon17Icon
                className={classNames(defaultcss.all, sty.svg___29Lw)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__cWswE
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__jcgxj)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__fez71
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__n0GfJ)}
              colors={"green" as const}
            >
              <Icon6Icon
                className={classNames(defaultcss.all, sty.svg__ghNh)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__xym8X
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__mtWdq)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__rP61
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__oA3Is)}
              colors={"yellow" as const}
            >
              <Icon15Icon
                className={classNames(defaultcss.all, sty.svg__jTrVw)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />
      </ValuePropCardsSection>

      <ValuePropCardsSection
        className={classNames(
          "__wab_instance",
          sty.valuePropCardsSection__fmqn1
        )}
        slot={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text___0Rz
            )}
          >
            {"Hit the ground running."}
          </div>
        }
      >
        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink__swWU)}
              label={"Browse starter projects"}
            />
          }
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__ud6Hb
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__y1OYi)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__vpuiR
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__uWwSg)}
              colors={"red" as const}
            >
              <Icon17Icon
                className={classNames(defaultcss.all, sty.svg__cIwYk)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink__u0EdL)}
              label={"Learn about Figma Import"}
            />
          }
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard___6KbGu
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__gSyOs)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__q5DPy
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__gSe9W)}
              colors={"pink" as const}
            >
              <Icon18Icon
                className={classNames(defaultcss.all, sty.svg__sutol)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink__hVze6)}
              label={"Learn about Plume"}
              type={["purpleFlat"]}
            />
          }
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__ks3Kg
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__h6W5S)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__j5Qtp
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__fKa3Z)}
              colors={"purple" as const}
            >
              <Icon19Icon
                className={classNames(defaultcss.all, sty.svg__pMzRj)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink__bdzEh)}
              label={"Browse starter projects"}
            />
          }
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__jE1Fs
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__bMtJ)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text___1Vqss
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__mLoky)}
              colors={"blue" as const}
            >
              <Icon13Icon
                className={classNames(defaultcss.all, sty.svg__eb3Ru)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />
      </ValuePropCardsSection>

      <ValuePropSection
        backgroundImage={
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__sbYKm)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image6.svg",
              fullWidth: 300,
              fullHeight: 95,
              aspectRatio: 3.150655
            }}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__fc8Vh)}
        description={
          "Keep full control how your design looks and feels in production directly from Plasmic. What you see is what you get."
        }
        header={"full control"}
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__odqYr)}
            colors={"darkGraySolid" as const}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__bvw9R)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text___1IpE
            )}
          >
            {"Get autonomy control over your design system in production."}
          </div>
        }
      />

      <ValuePropSection
        backgroundColor={"green" as const}
        backgroundImage={
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__lw6Vz)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image7.svg",
              fullWidth: 300,
              fullHeight: 145,
              aspectRatio: 2.068966
            }}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection___11Yl6)}
        description={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text__uss0S
            )}
          >
            {
              "Feel right at home within the Plasmic studio. As expressive as a design tool, you'll have the freedom to quickly iterate on new designs."
            }
          </div>
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text___8NNFx
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__x23Ey)}
            colors={"green" as const}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__gfBoa)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Powerful editing experience"}
      />

      <ValuePropSection
        backgroundColor={"yellow" as const}
        backgroundImage={
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__fz9I)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image2.svg",
              fullWidth: 300,
              fullHeight: 92,
              aspectRatio: 3.257919
            }}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__cGw31)}
        description={
          "Iterate quickly on new designs and content and get to market faster. Ship faster, learn faster."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text__kItya
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__bUdk)}
            colors={"yellow" as const}
          >
            <Icon10Icon
              className={classNames(defaultcss.all, sty.svg__cBoIc)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Deploy with no coding required"}
      />

      <ValuePropSection
        backgroundColor={"orange" as const}
        backgroundImage={
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__fy3Vo)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"auto" as const}
            src={{
              src: "/plasmic/nextjs_ableaura_com/images/image7.svg",
              fullWidth: 300,
              fullHeight: 145,
              aspectRatio: 2.068966
            }}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__giAIw)}
        description={
          "No need to change or replace your existing stack. Start with a blurb on a page."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.text__h9DF
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon___9UOho)}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__bQ9Cn)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Adopt incrementally in any existing React stack"}
      />

      <Footer
        data-plasmic-name={"footer"}
        data-plasmic-override={overrides.footer}
        className={classNames("__wab_instance", sty.footer)}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageHero",
    "valuePropsListSection",
    "valuePropListItem",
    "footer"
  ],
  header: ["header"],
  pageHero: ["pageHero"],
  valuePropsListSection: ["valuePropsListSection", "valuePropListItem"],
  valuePropListItem: ["valuePropListItem"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  pageHero: typeof PageHero;
  valuePropsListSection: typeof ValuePropsListSection;
  valuePropListItem: typeof ValuePropListItem;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPageDesignSystems__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPageDesignSystems__VariantsArgs;
    args?: PlasmicPageDesignSystems__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicPageDesignSystems__Fetches;
  } & Omit<PlasmicPageDesignSystems__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPageDesignSystems__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPageDesignSystems__ArgProps,
      internalVariantPropNames: PlasmicPageDesignSystems__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicPageDesignSystems__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPageDesignSystems";
  } else {
    func.displayName = `PlasmicPageDesignSystems.${nodeName}`;
  }
  return func;
}

export const PlasmicPageDesignSystems = Object.assign(
  // Top-level PlasmicPageDesignSystems renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageHero: makeNodeComponent("pageHero"),
    valuePropsListSection: makeNodeComponent("valuePropsListSection"),
    valuePropListItem: makeNodeComponent("valuePropListItem"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicPageDesignSystems
    internalVariantProps: PlasmicPageDesignSystems__VariantProps,
    internalArgProps: PlasmicPageDesignSystems__ArgProps
  }
);

export default PlasmicPageDesignSystems;
/* prettier-ignore-end */
